import { extractTextFromFile, generateExcelTemplate } from '../model/excelModel.js';

export async function generateExcel(req, res) {
  try {
    const { inputText, formatInstructions } = req.body;
    const file = req.file;

    // Validate inputs
    if (!formatInstructions) {
      return res.status(400).json({ 
        success: false,
        error: 'Format instructions are required' 
      });
    }

    let combinedText = inputText || '';
    if (file) {
      try {
        const extractedText = await extractTextFromFile(file);
        combinedText += (combinedText ? '\n\n' : '') + extractedText;
      } catch (extractError) {
        console.error('File extraction error:', extractError);
        return res.status(400).json({
          success: false,
          error: `Failed to process file: ${extractError.message}`
        });
      }
    }

    if (!combinedText.trim()) {
      return res.status(400).json({ 
        success: false,
        error: 'Either input text or a file with content is required' 
      });
    }

    // Generate the Excel template using AI
    const workbook = await generateExcelTemplate(combinedText, formatInstructions);

    // Set response headers
    res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    res.setHeader('Content-Disposition', 'attachment; filename=ai-generated-template.xlsx');
    res.setHeader('X-AI-Generated', 'true');
    res.setHeader('X-Template-Description', 'Generated by Gemini AI');

    // Send the Excel file
    await workbook.xlsx.write(res);
    res.end();
  } catch (error) {
    console.error('Excel generation error:', error);
    res.status(500).json({ 
      success: false,
      error: error.message || 'Failed to generate Excel file',
      details: process.env.NODE_ENV === 'development' ? error.stack : undefined
    });
  }
}